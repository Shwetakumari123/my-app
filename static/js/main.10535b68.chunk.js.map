{"version":3,"sources":["logo.svg","component/blog.js","component/login.js","component/twitter.js","component/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Blog","updateSubmit","event","tempBlog","state","blog","push","title","content","setState","console","log","preventDefault","handleChange","target","value","handleContent","listBlog","this","map","item","i","key","TextField","id","label","style","margin","placeholder","helperText","fullWidth","onChange","InputLabelProps","shrink","Button","type","variant","color","onClick","React","Component","Login","username","passowrd","alert","Twitter","Redirect","window","location","RedirectLinkedIn","padding","width","Home","align","backgroundColor","path","render","App","className","Boolean","hostname","match","routs","listStyleType","overflow","float","display","to","fontSize","textDecoration","exact","component","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.10535b68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';  \nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass Blog extends React.Component {  \n constructor() {  \n      super();  \n      this.state = {  \n\t\t  title : '',\n\t\t  content : '',\n\t\t  blog    : [] \n      }  \n   }  \n\t\n\n\tupdateSubmit = (event) => {  \n\t\tlet tempBlog = this.state.blog;\n\t\ttempBlog.push ({\n\t\t\ttitle : this.state.title,\n\t\t\tcontent : this.state.content\n\t\t})\n\t\tthis.setState({blog: tempBlog})\n\t\tconsole.log(\"blog\",this.state.blog)\n\t\tevent.preventDefault();  \n\t}  \n\n\thandleChange = (event) => {\n    this.setState({title: event.target.value});\n  }\n\n\t handleContent = (event) => {\n      this.setState({content: event.target.value});\n    }\n\t\n\n   render() {  \n\t   const listBlog = this.state.blog.map(( item, i ) =>{ \n\t\t   return(\n\t\t\t   <div>\n\t\t\t\t   <h2>Title of the Blog : {item.title}</h2>\n\t\t   <li key = {i}>  {item.content} </li>\n\t   </div>\n\t\t\t   )\n\t\t\t   }\n\t\t\t)\n      return (  \n         <div >  \n\t\t\t<h1> My Blog </h1>\t\n\t\t\t  <TextField\n\t\t\t\t  id=\"standard-full-width\"\n\t\t\t\t  label=\"Title of the Blog\"\n\t\t\t\t  style={{ margin: 8 }}\n\t\t\t\t  placeholder=\"Placeholder\"\n\t\t\t\t  helperText=\"Enter title of the blog\"\n\t\t\t\t  fullWidth\n\t\t\t\t  margin=\"normal\"\n\t\t\t\t  onChange={this.handleChange}\n\t\t\t\t  InputLabelProps={{\n\t\t\t\t  shrink: true,\n\t\t\t\t  }}\n\t\t\t  />\n\t\t\t\t<TextField\n                    id=\"standard-full-width\"\n                    label=\"About blog\"\n                    style={{ margin: 8 }}\n                    placeholder=\"Placeholder\"\n                    helperText=\"Enter the content of the blog\"\n                    fullWidth\n                    margin=\"normal\"\n\t\t\t\t\tonChange={this.handleContent}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                />\t\t  \n\t\t\t  <br/>\n\t\t\t  <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick = {this.updateSubmit}>\n\t\t\t\t\t  Submit\n\t\t\t  </Button> \n\t\t\t  <h1> List of Blog </h1>\n\t\t<div>\n\t\t\t<ul>{listBlog}</ul>\n\t\t</div>\n         </div>  \n      );  \n   }  \n}  \nexport default Blog;  \n","import React, { Component } from 'react';  \nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass Login extends React.Component {  \n constructor() {  \n      super();  \n      this.state = {  \n\t\t  username : '',\n\t\t  passowrd : '',\n      }  \n   }  \n\n\thandleChange = (event) => {\n      this.setState({username: event.target.value});\n    }\n\n       handleContent = (event) => {\n        this.setState({passowrd: event.target.value});\n      }\n\t\tupdateSubmit = (event) => { \n\t\treturn(\n\t\t\talert( \"your username is\" + this.state.username)\n\t\t)}\n   render() {  \n      return (  \n         <div>  \n\t\t\t <h1> Login screen </h1>\n\t\t\t\t <TextField\n                    id=\"standard-full-width\"\n                    label=\"Enter your username\"\n                    style={{ margin: 8 }}\n                    placeholder=\"username\"\n                    fullWidth\n                    margin=\"normal\"\n                    onChange={this.handleChange}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                />\n                  <TextField\n                      id=\"standard-full-width\"\n                      label=\"Enter password\"\n                      style={{ margin: 8 }}\n                      placeholder=\"Password\"\n                      fullWidth\n                      margin=\"normal\"\n                      onChange={this.handleContent}\n                      InputLabelProps={{\n                      shrink: true,\n                      }}\n                  />\n                <br/>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick = {this.updateSubmit}>\n                        Submit\n                </Button>\n         </div>  \n      );  \n   }  \n}  \nexport default Login;  \n","import React, { Component } from 'react';  \n  import Button from '@material-ui/core/Button';\nclass Twitter extends React.Component {  \n constructor() {  \n      super();  \n      this.state = {  \n\t\t  username : '',\n\t\t  passowrd : '',\n      }  \n   }  \n\n\tupdateSubmit = (event) => {  \n\t\talert('You have entered the UserName and CompanyName successfully.');  \n\t\tevent.preventDefault();  \n\t}  \n\t Redirect = () => {\n               window.location = \"https://twitter.com/\";\n            }\n\n\tRedirectLinkedIn = () => {\n                 window.location = \"https://www.linkedin.com\";\n              }\n   render() {  \n      return (  \n         <div>  \n\t\t\t <h1> This page is just for redirecting to Twitter and LinkedIn</h1>\n\t\t\t <div>\n\t\t\t <Button type=\"submit\" variant=\"contained\" color=\"primary\" style = {{padding : 10, width : 400}} onClick = {() => this.Redirect()}>\n                        Twitter\n                </Button>\n\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t<div>\n\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"primary\" style = {{padding : 10, width : 400}} onClick = {() => this.RedirectLinkedIn()}>\n                          LinkedIn\n                  </Button>\t\n\t\t\t  </div>\n         </div>  \n      );  \n   }  \n}  \nexport default Twitter;  \n","import React, { Component } from 'react';  \nimport { Route, } from 'react-router-dom';\nimport Blog from '../component/blog';\nimport login from '../component/login';\nimport Twitter from '../component/twitter';\n\nclass Home extends React.Component {  \n constructor() {  \n      super();  \n      this.state = {  \n\t\t  username : '',\n\t\t  passowrd : '',\n      }  \n   }  \n\n\n   render() {  \n      return (  \n         <div align=\"center\" style={{backgroundColor: \"red\"}} >  \n\t\t\t<Route\n                   path=\"/blog\"\n                   render={() =>\n               <Blog/>}\n               />\n              <Route\n                  path=\"/login\"\n                  render={() =>\n                   <login/>}\n              />\n              <Route\n                  path=\"/twitter\"\n                  render={() =>\n              <Twitter/>}\n                />\n         </div>  \n      );  \n   }  \n}  \nexport default Home;  \n","import React from 'react';\nimport logo from './logo.svg';\nimport Home from './component/home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\t\t<Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Route, Link, BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport Blog    from './component/blog';\nimport Login   from './component/login';\nimport Twitter from './component/twitter';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\n\nimport * as serviceWorker from './serviceWorker';\nconst routs = (\n   < BrowserRouter >\n      <div align=\"center\">\n         <ul style = {{listStyleType: \"none\", overflow: \"hidden\",  backgroundColor: \"black\"}}>\n            <li style = {{float: \"left\", padding : 20, display: \"block\"}} >\n               <Link to=\"/blog\" style = {{ color : \"white\", fontSize : 25, textDecoration: \"none\"}}>Blog</Link>\n            </li>\n\t\t\t<li style = {{float: \"left\" , padding : 20  }}>\n               <Link style = {{ color : \"white\", fontSize : 25, textDecoration: \"none\"}} to=\"/login\">Login</Link>\n            </li>\t\n\t\t\t<li style = {{float: \"left\", padding : 20}}>\n               <Link  style = {{ color : \"white\", fontSize : 25, textDecoration: \"none\"}} to=\"/twitter\">Twitter and LinkedIn</Link>\n            </li>\t\n         </ul>\n         <Route exact path=\"/\"  component={App} />\n         <Route path=\"/blog\"    component={Blog} />\n\t\t <Route path=\"/login\"   component={Login} />\t\t\t \n         <Route path=\"/twitter\" component={Twitter} />\n      </div>\n   </ BrowserRouter >\n);\nReactDOM.render(routs, document.getElementById('root'))\nserviceWorker.unregister();\n"],"sourceRoot":""}